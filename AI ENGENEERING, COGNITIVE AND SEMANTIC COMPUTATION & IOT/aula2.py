# -*- coding: utf-8 -*-
"""AULA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wOcmk5tRlrX92EhJAx3bMEMcDGVYcNNN
"""

import numpy as np
import cv2 as cv
import matplotlib as mpl
from matplotlib import pyplot as plot
import math

# Começamos importanto as bibliotecas
import cv2
import numpy as np
from matplotlib import pyplot as plt
zeros_array = np.zeros((3, 3))
zeros_array[0, 0] = 1
plt.imshow(zeros_array)
print(zeros_array)

img = np.zeros((10,10, 3), dtype=np.uint8
)
plt.imshow(img)
print(img)

#lê a imagem
img_BGR = cv.imread("Folha.jpg")
#altera a ordem das bandas de cores BGR para RGB
img_RGB = cv.cvtColor(img_BGR,cv.COLOR_BGR2RGB)
#exibe a imagem
plot.imshow(img_RGB)

#faz split das bandas da imagem RGB
R, G, B = cv.split(img_RGB)
plot.imshow(R, cmap='gray')
plot.show()
plot.imshow(G, cmap='gray')
plot.show()
plot.imshow(B, cmap='gray')

#obtem as dimensões da imagem (número de linhas e número de colunas)
num_lin = img_RGB.shape[0]
num_col = img_RGB.shape[1]
#cria uma matriz preenchida com zeros - nela serão armazenados os níveis de cinzas das médias computadas (R+G+B)/3
img_gray=np.zeros((num_lin,num_col), dtype="uint8")
for l in range (num_lin):
  for c in range (num_col):
    (r, g, b) = img_RGB[l,c]
    img_gray[l,c] = (int(r)+int(g)+int(b))//3
plot.imshow(img_gray,cmap='gray')

#a função abaixo converte diretamente uma imagem colorida para níveis de cinzas (pode ser BGR->GRAY ou RGB->GRAY)
img_gray = cv2.cvtColor(img_RGB, cv2.COLOR_RGB2GRAY)
plot.imshow(img_gray,cmap='gray')

img_sat = cv2.imread("satelite.jpg")
img_sat = cv2.cvtColor(img_sat, cv2.COLOR_BGR2RGB)
imgR, imgG, imgB = cv2.split(img_sat)
plt.imshow(imgR)
plt.colorbar()

img_sat = cv2.imread("satelite.jpg")
img_sat = cv2.cvtColor(img_sat, cv2.COLOR_BGR2RGB)
imgR, imgG, imgB = cv2.split(img_sat)
plt.imshow(imgR, cmap="inferno")
plt.colorbar()

import numpy as np
from matplotlib import pyplot as plt
import cv2
imagem = cv2.imread("cogumelo.png")
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2GRAY)
plt.imshow(image, interpolation="none", cmap="gray")
plt.show()

import cv2
imagem = cv2.imread("cogumelo.png")
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2GRAY)
for y in range(0, image.shape[0]):
    for x in range(0, image.shape[1]):
      if image[y, x] == 255:
        image[y,x] = 0
      else:
        image[y,x] = 255
plt.imshow(image, interpolation="none", cmap="gray")
plt.show()

import cv2
imagem = cv2.imread("gokuinvertido.jpg")
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2RGB)
altura = image.shape[0]
largura = image.shape[1]
print("altura: {} largura: {}".format(altura, largura))
plt.imshow(image, interpolation="none")
plt.show()
# para salvar imagem
#cv2.imwrite("gokunormal.jpg", cv2.cvtColor(image2, cv2.COLOR_RGB2BGR))

imagem = cv2.imread("gokuinvertido.jpg")
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2RGB)

altura = image.shape[0]
largura = image.shape[1]

alt2 = int(image.shape[0]/2)
lar2 = int(image.shape[1]/2)

crop1= image[0:alt2, 0:lar2]
crop2= image[0:alt2, lar2:largura]
crop3= image[alt2:altura, 0:lar2]
crop4= image[alt2:altura, lar2:largura]

img2 = image.copy()

img2[0:alt2, 0:lar2] = crop4
img2[0:alt2, lar2:largura] = crop3
img2[alt2:altura, 0:lar2] = crop2
img2[alt2:altura, lar2:largura] = crop1

plt.imshow(img2)

imagem = cv2.imread("drone.jpg")
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2RGB)

print(image.shape)
for y in range(0, image.shape[0]):
  for x in range(0, image.shape[1]):
    if image[y,x,0] > 50:
      image[y,x]= (255,255,255)

plt.imshow(image)