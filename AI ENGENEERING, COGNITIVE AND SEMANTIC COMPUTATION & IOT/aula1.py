# -*- coding: utf-8 -*-
"""AULA_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mwu5he8JVDXx2_c2LWpNSGtNxFkcl1fU
"""

# Commented out IPython magic to ensure Python compatibility.
#Importando a lib OpenCV
import cv2
import numpy as np
# %matplotlib inline
from matplotlib import pyplot as plt
print("openCV versão: %s" %cv2.__version__)

image = cv2.imread("//NATUREZA_1.jpg") #lê a imagem
plt.axis("off") #tira os eixos da imagem
plt.imshow(image) #exibe a imagem

image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB) #converte a imagem BRG para RGB
plt.axis("off") #tira os eixos da imagem
plt.imshow(image_rgb) #exibe a imagem convertida

#dimensoes da imagem
print("dimensão da imagem", image_rgb.shape)
print("dimensão da linha", image_rgb.shape[0])
print("dimensão da coluna", image_rgb.shape[1])
print("dimensão das camadas", image_rgb.shape[2])

#Representação da imagem
print("Matriz da imagem: \n", image_rgb)

(r, g, b) = image_rgb[50, 50]
print("pixel(50, 50) tem as seguintes cores: ")
print("vermelho: ", r)
print("verde: ", g)
print("azul: ", b)

image = cv2.imread("//img3x3.png") #lê a imagem
plt.axis("off") #tira os eixos da imagem
plt.imshow(image) #exibe a imagem

image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB) #converte a imagem BRG para RGB
plt.axis("off") #tira os eixos da imagem
plt.imshow(image_rgb) #exibe a imagem convertida

#dimensoes da imagem
print("dimensão da imagem", image_rgb.shape)
print("dimensão da linha", image_rgb.shape[0])
print("dimensão da coluna", image_rgb.shape[1])
print("dimensão das camadas", image_rgb.shape[2])

#Representação da imagem
print("Matriz da imagem: \n", image_rgb)

imagem_cinza = cv2.imread("//img3x3.png", cv2.IMREAD_GRAYSCALE) #carrega imagem na versão cinza
plt.imshow(imagem_cinza, cmap="gray")
plt.axis("off")
plt.show()
imagem_cinza

#alterando o tamanho da imagem
imagem = cv2.imread("//NATUREZA_1.jpg")
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2RGB)
print("Dimensões da imagem: ", image.shape)

imagem2 = cv2.resize(image, (600,400), cv2.INTER_LINEAR)
print("Novas dimensões da imagem: ", imagem2.shape)
plt.imshow(imagem2)
plt.show()

image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB) #converte a imagem BRG para RGB
plt.axis("off") #tira os eixos da imagem
plt.imshow(image_rgb) #exibe a imagem convertida

image = cv2.imread("//img3x3.png") #lê a imagem
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2RGB)

plt.axis("off") #tira os eixos da imagem
plt.imshow(image) #exibe a imagem

imagem3 = cv2.imread("//img3x3.png")
imagemNova = cv2.cvtColor(imagem3, cv2.COLOR_BGR2RGB)


plt.imshow(imagemNova)
plt.show()

imagemNova[0, 0] = (255, 0, 255)
imagemNova[0, 1] = (255, 255, 255)
imagemNova[0, 2] = (0, 0, 255)
# Exibir a imagem com o pixel alterado
plt.imshow(imagemNova)
plt.show()

zeros_array = np.zeros((5,5))

zeros_array[0,0] = 1
zeros_array[0,1] = 0
zeros_array[0,2] = 0
zeros_array[0,4] = 1
zeros_array[1,0] = 0
zeros_array[1,1] = 1
zeros_array[1,2] = 0
zeros_array[1,3] = 1
zeros_array[2,2] = 1
zeros_array[3,2] = 1
zeros_array[4,2] = 1


plt.imshow(zeros_array, cmap="gray")
print(zeros_array)

