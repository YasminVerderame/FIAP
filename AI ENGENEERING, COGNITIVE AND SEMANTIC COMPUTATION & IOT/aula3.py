# -*- coding: utf-8 -*-
"""AULA3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IDE9K1hzbaoXWMGQtKLCPiMo0UBUJvM8
"""

import cv2
from matplotlib import pyplot as plt
import numpy as np
print ("OpenCV Version : %s " % cv2.__version__)

img = cv2.imread("lenna.jpg")
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
plt.imshow(img)

plt.hist(img.ravel(), 256,[0, 255])
plt.show()

img = cv2.imread("fusca.png", cv2.IMREAD_GRAYSCALE)
plt.imshow(img, cmap="gray")

plt.hist(img.ravel(), 256,[0, 255])
plt.show()

img_eq = cv2.equalizeHist(img)
plt.imshow(4*img_eq, cmap="gray")

plt.hist(4*img_eq.ravel(), 256,[0, 255])
plt.show()

imagem = cv2.imread("bola.png")
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2RGB)
plt.imshow(image)
plt.show()
plt.hist(image.ravel(), 256, [0, 255])
plt.show()

#Histograma verde
plt.imshow(image[:,:, 1], cmap="gray")
plt.show()
plt.hist(image[:,:, 1].ravel(), 256, [0, 255])
plt.show()

#histograma Vermelho
plt.imshow(image[:,:,0], cmap="gray", vmin=0, vmax=255);
plt.show()
plt.hist(image[:,:,0].ravel(),256,[0,256]);
plt.show()

#Histograma azul
plt.imshow(image[:,:, 2], cmap="gray")
plt.show()
plt.hist(image[:,:, 2].ravel(), 256, [0, 255])
plt.show()

image2 = image.copy()
gray_r = image2[:,:,0]
gray_g = image2[:,:,1]
gray_b = image2[:,:,2]
img_bola = image2.copy()
for y in range(0, image2.shape[0]):
  for x in range(0, image2.shape[1]):
    if gray_g[y][x] <= 230:
      img_bola[y][x]= 0
    if gray_b[y][x] >= 20:
      img_bola[y][x]= 0
plt.imshow(img_bola, interpolation="none")
plt.show()

image2 = image.copy()
gray_r = image2[:,:,0]
gray_g = image2[:,:,1]
gray_b = image2[:,:,2]
img_bola = image2.copy()
for y in range(0, image2.shape[0]):
  for x in range(0, image2.shape[1]):
    if gray_b[y][x] >= 200:
      img_bola[y][x]= 0
    if gray_r[y][x] <= 240 :
      img_bola[y][x] = 0
plt.imshow(img_bola, interpolation="none")
plt.show()

image2 = image.copy()
gray_r = image2[:,:,0]
gray_g = image2[:,:,1]
gray_b = image2[:,:,2]
img_bola = image2.copy()
for y in range(0, image2.shape[0]):
  for x in range(0, image2.shape[1]):
    if gray_b[y][x] <= 140:
      img_bola[y][x] = 0
    if gray_r[y][x] >= 80:
      img_bola[y][x] = 0
plt.imshow(img_bola, interpolation="none")
plt.show()

imagem = cv2.imread("bolinha.png")
image = cv2.cvtColor(imagem, cv2.COLOR_BGR2RGB)
plt.imshow(image)
plt.show()
plt.hist(image.ravel(), 256, [0, 255])
plt.show()

#Histograma verde
plt.imshow(image[:,:, 1], cmap="gray")
plt.show()
plt.hist(image[:,:, 1].ravel(), 256, [0, 255])
plt.show()

#Histograma azul
plt.imshow(image[:,:, 2], cmap="gray")
plt.show()
plt.hist(image[:,:, 2].ravel(), 256, [0, 255])
plt.show()

#histograma Vermelho
plt.imshow(image[:,:,0], cmap="gray", vmin=0, vmax=255);
plt.show()
plt.hist(image[:,:,0].ravel(),256,[0,256]);
plt.show()

image2 = image.copy()
gray_r = image2[:,:,0]
gray_g = image2[:,:,1]
gray_b = image2[:,:,2]
img_bola = image2.copy()
for y in range(0, image2.shape[0]):
  for x in range(0, image2.shape[1]):
    if gray_r[y][x] < 250:
      img_bola[y][x] = 0
    if gray_b[y][x] >= 250:
      img_bola[y][x] = 0
    if gray_g[y][x] >= 200:
      img_bola[y][x] = 0
plt.imshow(img_bola, interpolation="none")
plt.show()

img2 = cv2.imread('bolinha.png')
img_rgb = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)
img_hsv = cv2.cvtColor(img_rgb, cv2.COLOR_RGB2HSV)
# Definição dos valores minimo e max da mascara
# o magenta tem h=300 mais ou menos ou 150 para a OpenCV
image_lower_hsv = np.array([270, 150, 150])
image_upper_hsv = np.array([330, 255, 255])
mask_hsv = cv2.inRange(img_hsv, image_lower_hsv, image_upper_hsv)
plt.subplot()
plt.imshow(img_rgb)
plt.show()
plt.subplot()
plt.imshow(mask_hsv, cmap="Greys_r", vmin=0,vmax=255)
plt.show()

img2 = cv2.imread('Naruto.png')
img_rgb = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)
img_hsv = cv2.cvtColor(img_rgb, cv2.COLOR_RGB2HSV)
# Definição dos valores minimo e max da mascara
# o magenta tem h=300 mais ou menos ou 150 para a OpenCV
image_lower_hsv = np.array([0, 150, 150])
image_upper_hsv = np.array([15, 255, 255])
mask_hsv = cv2.inRange(img_hsv, image_lower_hsv, image_upper_hsv)
plt.subplot()
plt.imshow(img_rgb)
plt.show()
plt.subplot()
plt.imshow(mask_hsv, cmap="Greys_r", vmin=0,vmax=255)
plt.show()

img2 = cv2.imread('melancia.png')
img_rgb = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)
img_hsv = cv2.cvtColor(img_rgb, cv2.COLOR_RGB2HSV)
# Definição dos valores minimo e max da mascara
# o magenta tem h=300 mais ou menos ou 150 para a OpenCV
image_lower_hsv = np.array([0, 100, 200])
image_upper_hsv = np.array([180, 200, 255])
mask_hsv = cv2.inRange(img_hsv, image_lower_hsv, image_upper_hsv)
plt.subplot()
plt.imshow(img_rgb)
plt.show()
plt.subplot()
plt.imshow(mask_hsv, cmap="Greys_r", vmin=0,vmax=255)
plt.show()